// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from "@hey-api/client-axios";
import type {
  InfoData,
  InfoResponse,
  ListAdvisoriesData,
  ListAdvisoriesResponse,
  UploadAdvisoryData,
  PatchAdvisoryLabelsData,
  PatchAdvisoryLabelsResponse,
  UpdateAdvisoryLabelsData,
  UpdateAdvisoryLabelsResponse,
  DeleteAdvisoryData,
  DeleteAdvisoryResponse,
  GetAdvisoryData,
  GetAdvisoryResponse,
  DownloadAdvisoryData,
  DownloadAdvisoryResponse,
  SearchComponentData,
  SearchComponentResponse,
  GetComponentData,
  GetComponentResponse,
  RenderSbomGraphData,
  RenderSbomGraphResponse,
  StatusData,
  StatusResponse,
  UploadDatasetData,
  ListImportersData,
  ListImportersResponse,
  DeleteImporterData,
  GetImporterData,
  GetImporterResponse,
  PatchImporterData,
  CreateImporterData,
  UpdateImporterData,
  EnableImporterData,
  ForceRunImporterData,
  ListImporterReportsData,
  ListImporterReportsResponse,
  ListLicensesData,
  ListLicensesResponse,
  ListSpdxLicensesData,
  ListSpdxLicensesResponse,
  GetSpdxLicenseData,
  GetSpdxLicenseResponse,
  GetLicensesData,
  GetLicensesResponse,
  GetLicensePurlsData,
  GetLicensePurlsResponse,
  ListOrganizationsData,
  ListOrganizationsResponse,
  GetOrganizationData,
  GetOrganizationResponse,
  ListProductsData,
  ListProductsResponse,
  DeleteProductData,
  DeleteProductResponse,
  GetProductData,
  GetProductResponse,
  ListPurlData,
  ListPurlResponse,
  ListBasePurlsData,
  ListBasePurlsResponse,
  GetBasePurlData,
  GetBasePurlResponse,
  ListPurlTypesData,
  ListPurlTypesResponse,
  GetPurlTypeData,
  GetPurlTypeResponse,
  GetBasePurlOfTypeData,
  GetBasePurlOfTypeResponse,
  GetVersionedPurlOfTypeData,
  GetVersionedPurlOfTypeResponse,
  GetVersionedPurlData,
  GetVersionedPurlResponse,
  GetPurlData,
  GetPurlResponse,
  ListSbomsData,
  ListSbomsResponse,
  UploadSbomData,
  UploadSbomResponse,
  ListRelatedSbomsData,
  ListRelatedSbomsResponse,
  CountRelatedSbomsData,
  CountRelatedSbomsResponse,
  DeleteSbomData,
  DeleteSbomResponse,
  GetSbomData,
  GetSbomResponse,
  GetSbomAdvisoriesData,
  GetSbomAdvisoriesResponse,
  PatchSbomLabelsData,
  PatchSbomLabelsResponse,
  UpdateSbomLabelsData,
  UpdateSbomLabelsResponse,
  ListPackagesData,
  ListPackagesResponse,
  ListRelatedPackagesData,
  ListRelatedPackagesResponse,
  DownloadSbomData,
  DownloadSbomResponse,
  DeleteUserPreferencesData,
  GetUserPreferencesData,
  SetUserPreferencesData,
  ListVulnerabilitiesData,
  ListVulnerabilitiesResponse,
  DeleteVulnerabilityData,
  DeleteVulnerabilityResponse,
  GetVulnerabilityData,
  GetVulnerabilityResponse,
  ListWeaknessesData,
  ListWeaknessesResponse,
  GetWeaknessData,
  GetWeaknessResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export class DefaultService {
  public static info<ThrowOnError extends boolean = false>(
    options?: Options<InfoData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      InfoResponse,
      unknown,
      ThrowOnError
    >({
      url: "/.well-known/trustify",
      ...options,
    });
  }
}

export class AdvisoryService {
  /**
   * List advisories
   */
  public static listAdvisories<ThrowOnError extends boolean = false>(
    options?: Options<ListAdvisoriesData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListAdvisoriesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory",
      ...options,
    });
  }

  /**
   * Upload a new advisory
   */
  public static uploadAdvisory<ThrowOnError extends boolean = false>(
    options: Options<UploadAdvisoryData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).post<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Modify existing labels of an advisory
   */
  public static patchAdvisoryLabels<ThrowOnError extends boolean = false>(
    options: Options<PatchAdvisoryLabelsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).patch<
      PatchAdvisoryLabelsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory/{id}/label",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Replace the labels of an advisory
   */
  public static updateAdvisoryLabels<ThrowOnError extends boolean = false>(
    options: Options<UpdateAdvisoryLabelsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).put<
      UpdateAdvisoryLabelsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory/{id}/label",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Delete an advisory
   */
  public static deleteAdvisory<ThrowOnError extends boolean = false>(
    options: Options<DeleteAdvisoryData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      DeleteAdvisoryResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory/{key}",
      ...options,
    });
  }

  /**
   * Get an advisory
   */
  public static getAdvisory<ThrowOnError extends boolean = false>(
    options: Options<GetAdvisoryData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetAdvisoryResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory/{key}",
      ...options,
    });
  }

  /**
   * Download an advisory document
   */
  public static downloadAdvisory<ThrowOnError extends boolean = false>(
    options: Options<DownloadAdvisoryData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      DownloadAdvisoryResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/advisory/{key}/download",
      ...options,
    });
  }
}

export class AnalysisService {
  /**
   * Retrieve SBOM components (packages) by a complex search.
   */
  public static searchComponent<ThrowOnError extends boolean = false>(
    options?: Options<SearchComponentData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      SearchComponentResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/analysis/component",
      ...options,
    });
  }

  /**
   * Retrieve SBOM components (packages) by name, Package URL, or CPE.
   */
  public static getComponent<ThrowOnError extends boolean = false>(
    options: Options<GetComponentData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetComponentResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/analysis/component/{key}",
      ...options,
    });
  }

  /**
   * Render an SBOM graph
   */
  public static renderSbomGraph<ThrowOnError extends boolean = false>(
    options: Options<RenderSbomGraphData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      RenderSbomGraphResponse,
      unknown,
      ThrowOnError
    >({
      responseType: "text",
      url: "/api/v2/analysis/sbom/{sbom}/render.{ext}",
      ...options,
    });
  }

  /**
   * Get the status of the analysis service.
   */
  public static status<ThrowOnError extends boolean = false>(
    options?: Options<StatusData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      StatusResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/analysis/status",
      ...options,
    });
  }
}

export class DatasetService {
  /**
   * Upload a new dataset
   */
  public static uploadDataset<ThrowOnError extends boolean = false>(
    options: Options<UploadDatasetData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).post<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/dataset",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }
}

export class ImporterService {
  /**
   * List importer configurations
   */
  public static listImporters<ThrowOnError extends boolean = false>(
    options?: Options<ListImportersData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListImportersResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer",
      ...options,
    });
  }

  /**
   * Delete an importer configuration
   */
  public static deleteImporter<ThrowOnError extends boolean = false>(
    options: Options<DeleteImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer/{name}",
      ...options,
    });
  }

  /**
   * Get an importer configuration
   */
  public static getImporter<ThrowOnError extends boolean = false>(
    options: Options<GetImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetImporterResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer/{name}",
      ...options,
    });
  }

  /**
   * Update an existing importer configuration
   */
  public static patchImporter<ThrowOnError extends boolean = false>(
    options: Options<PatchImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).patch<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer/{name}",
      ...options,
      headers: {
        "Content-Type": "application/merge-patch+json",
        ...options?.headers,
      },
    });
  }

  /**
   * Create a new importer configuration
   */
  public static createImporter<ThrowOnError extends boolean = false>(
    options: Options<CreateImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).post<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer/{name}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Update an existing importer configuration
   */
  public static updateImporter<ThrowOnError extends boolean = false>(
    options: Options<UpdateImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).put<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer/{name}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Update an existing importer configuration
   */
  public static enableImporter<ThrowOnError extends boolean = false>(
    options: Options<EnableImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).put<
      unknown,
      unknown,
      ThrowOnError
    >({
      bodySerializer: null,
      url: "/api/v2/importer/{name}/enabled",
      ...options,
      headers: {
        "Content-Type": "text/plain",
        ...options?.headers,
      },
    });
  }

  /**
   * Force an importer to run as soon as possible
   */
  public static forceRunImporter<ThrowOnError extends boolean = false>(
    options: Options<ForceRunImporterData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).post<
      unknown,
      unknown,
      ThrowOnError
    >({
      bodySerializer: null,
      url: "/api/v2/importer/{name}/force",
      ...options,
      headers: {
        "Content-Type": "text/plain",
        ...options?.headers,
      },
    });
  }

  /**
   * Get reports for an importer
   */
  public static listImporterReports<ThrowOnError extends boolean = false>(
    options: Options<ListImporterReportsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      ListImporterReportsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/importer/{name}/report",
      ...options,
    });
  }
}

export class LicenseService {
  /**
   * List licenses
   */
  public static listLicenses<ThrowOnError extends boolean = false>(
    options?: Options<ListLicensesData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListLicensesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/license",
      ...options,
    });
  }

  /**
   * Retrieve license details
   */
  public static getLicenses<ThrowOnError extends boolean = false>(
    options: Options<GetLicensesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetLicensesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/license/{uuid}",
      ...options,
    });
  }

  /**
   * Retrieve pURLs covered by a license
   */
  public static getLicensePurls<ThrowOnError extends boolean = false>(
    options: Options<GetLicensePurlsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetLicensePurlsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/license/{uuid}/purl",
      ...options,
    });
  }
}

export class SpdxLicenseService {
  /**
   * List SPDX licenses
   */
  public static listSpdxLicenses<ThrowOnError extends boolean = false>(
    options?: Options<ListSpdxLicensesData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListSpdxLicensesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/license/spdx/license",
      ...options,
    });
  }

  /**
   * Get SPDX license details
   */
  public static getSpdxLicense<ThrowOnError extends boolean = false>(
    options: Options<GetSpdxLicenseData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetSpdxLicenseResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/license/spdx/license/{id}",
      ...options,
    });
  }
}

export class OrganizationService {
  /**
   * List organizations
   */
  public static listOrganizations<ThrowOnError extends boolean = false>(
    options?: Options<ListOrganizationsData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListOrganizationsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/organization",
      ...options,
    });
  }

  /**
   * Retrieve organization details
   */
  public static getOrganization<ThrowOnError extends boolean = false>(
    options: Options<GetOrganizationData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetOrganizationResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/organization/{id}",
      ...options,
    });
  }
}

export class ProductService {
  public static listProducts<ThrowOnError extends boolean = false>(
    options?: Options<ListProductsData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListProductsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/product",
      ...options,
    });
  }

  public static deleteProduct<ThrowOnError extends boolean = false>(
    options: Options<DeleteProductData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      DeleteProductResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/product/{id}",
      ...options,
    });
  }

  public static getProduct<ThrowOnError extends boolean = false>(
    options: Options<GetProductData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetProductResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/product/{id}",
      ...options,
    });
  }
}

export class PurlService {
  /**
   * List fully-qualified pURLs
   */
  public static listPurl<ThrowOnError extends boolean = false>(
    options?: Options<ListPurlData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListPurlResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl",
      ...options,
    });
  }

  /**
   * Retrieve versioned pURL details of a type
   */
  public static getVersionedPurlOfType<ThrowOnError extends boolean = false>(
    options: Options<GetVersionedPurlOfTypeData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetVersionedPurlOfTypeResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/type/{type}/{namespace_and_name}@{version}",
      ...options,
    });
  }

  /**
   * Retrieve details of a fully-qualified pURL
   */
  public static getPurl<ThrowOnError extends boolean = false>(
    options: Options<GetPurlData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetPurlResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/{key}",
      ...options,
    });
  }
}

export class BasePurlService {
  /**
   * List base versionless pURLs
   */
  public static listBasePurls<ThrowOnError extends boolean = false>(
    options?: Options<ListBasePurlsData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListBasePurlsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/base",
      ...options,
    });
  }

  /**
   * Retrieve details about a base versionless pURL
   */
  public static getBasePurl<ThrowOnError extends boolean = false>(
    options: Options<GetBasePurlData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetBasePurlResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/base/{key}",
      ...options,
    });
  }
}

export class PurlTypeService {
  /**
   * List known pURL types
   */
  public static listPurlTypes<ThrowOnError extends boolean = false>(
    options?: Options<ListPurlTypesData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListPurlTypesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/type",
      ...options,
    });
  }

  /**
   * Retrieve details about a pURL type
   */
  public static getPurlType<ThrowOnError extends boolean = false>(
    options: Options<GetPurlTypeData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetPurlTypeResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/type/{type}",
      ...options,
    });
  }

  /**
   * Retrieve base pURL details of a type
   */
  public static getBasePurlOfType<ThrowOnError extends boolean = false>(
    options: Options<GetBasePurlOfTypeData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetBasePurlOfTypeResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/type/{type}/{namespace_and_name}",
      ...options,
    });
  }
}

export class VersionedPurlService {
  /**
   * Retrieve details of a versioned, non-qualified pURL
   */
  public static getVersionedPurl<ThrowOnError extends boolean = false>(
    options: Options<GetVersionedPurlData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetVersionedPurlResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/purl/version/{key}",
      ...options,
    });
  }
}

export class SbomService {
  public static listSboms<ThrowOnError extends boolean = false>(
    options?: Options<ListSbomsData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListSbomsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom",
      ...options,
    });
  }

  /**
   * Upload a new SBOM
   */
  public static uploadSbom<ThrowOnError extends boolean = false>(
    options: Options<UploadSbomData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).post<
      UploadSbomResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom",
      ...options,
      headers: {
        "Content-Type": "application/octet-stream",
        ...options?.headers,
      },
    });
  }

  /**
   * Find all SBOMs containing the provided package.
   * The package can be provided either via a PURL or using the ID of a package as returned by
   * other APIs, but not both.
   */
  public static listRelatedSboms<ThrowOnError extends boolean = false>(
    options?: Options<ListRelatedSbomsData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListRelatedSbomsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/by-package",
      ...options,
    });
  }

  /**
   * Count all SBOMs containing the provided packages.
   * The packages can be provided either via a PURL or using the ID of a package as returned by
   * other APIs, but not both.
   */
  public static countRelatedSboms<ThrowOnError extends boolean = false>(
    options: Options<CountRelatedSbomsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      CountRelatedSbomsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/count-by-package",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static deleteSbom<ThrowOnError extends boolean = false>(
    options: Options<DeleteSbomData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      DeleteSbomResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}",
      ...options,
    });
  }

  public static getSbom<ThrowOnError extends boolean = false>(
    options: Options<GetSbomData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetSbomResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}",
      ...options,
    });
  }

  public static getSbomAdvisories<ThrowOnError extends boolean = false>(
    options: Options<GetSbomAdvisoriesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetSbomAdvisoriesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}/advisory",
      ...options,
    });
  }

  /**
   * Modify existing labels of an SBOM
   */
  public static patchSbomLabels<ThrowOnError extends boolean = false>(
    options: Options<PatchSbomLabelsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).patch<
      PatchSbomLabelsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}/label",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Replace the labels of an SBOM
   */
  public static updateSbomLabels<ThrowOnError extends boolean = false>(
    options: Options<UpdateSbomLabelsData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).put<
      UpdateSbomLabelsResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}/label",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Search for packages of an SBOM
   */
  public static listPackages<ThrowOnError extends boolean = false>(
    options: Options<ListPackagesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      ListPackagesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}/packages",
      ...options,
    });
  }

  /**
   * Search for related packages in an SBOM
   */
  public static listRelatedPackages<ThrowOnError extends boolean = false>(
    options: Options<ListRelatedPackagesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      ListRelatedPackagesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{id}/related",
      ...options,
    });
  }

  public static downloadSbom<ThrowOnError extends boolean = false>(
    options: Options<DownloadSbomData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      DownloadSbomResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/sbom/{key}/download",
      ...options,
    });
  }
}

export class UserPreferencesService {
  /**
   * Delete user preferences
   */
  public static deleteUserPreferences<ThrowOnError extends boolean = false>(
    options: Options<DeleteUserPreferencesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/userPreference/{key}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  /**
   * Get user preferences
   */
  public static getUserPreferences<ThrowOnError extends boolean = false>(
    options: Options<GetUserPreferencesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/userPreference/{key}",
      ...options,
    });
  }

  /**
   * Set user preferences
   */
  public static setUserPreferences<ThrowOnError extends boolean = false>(
    options: Options<SetUserPreferencesData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).put<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/userPreference/{key}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }
}

export class VulnerabilityService {
  /**
   * List vulnerabilities
   */
  public static listVulnerabilities<ThrowOnError extends boolean = false>(
    options?: Options<ListVulnerabilitiesData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListVulnerabilitiesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/vulnerability",
      ...options,
    });
  }

  /**
   * Delete vulnerability
   */
  public static deleteVulnerability<ThrowOnError extends boolean = false>(
    options: Options<DeleteVulnerabilityData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      DeleteVulnerabilityResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/vulnerability/{id}",
      ...options,
    });
  }

  /**
   * Retrieve vulnerability details
   */
  public static getVulnerability<ThrowOnError extends boolean = false>(
    options: Options<GetVulnerabilityData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetVulnerabilityResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/vulnerability/{id}",
      ...options,
    });
  }
}

export class WeaknessService {
  /**
   * List weaknesses
   */
  public static listWeaknesses<ThrowOnError extends boolean = false>(
    options?: Options<ListWeaknessesData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ListWeaknessesResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/weakness",
      ...options,
    });
  }

  /**
   * Retrieve weakness details
   */
  public static getWeakness<ThrowOnError extends boolean = false>(
    options: Options<GetWeaknessData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      GetWeaknessResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/v2/weakness/{id}",
      ...options,
    });
  }
}
