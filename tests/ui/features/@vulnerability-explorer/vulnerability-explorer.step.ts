import { createBdd } from "playwright-bdd";
import { ToolbarTable } from "../../helpers/ToolbarTable";

export const { Given, When, Then } = createBdd();

const SBOM_TABLE_NAME = "Sbom table";
const ADVISORY_TABLE_NAME = "Advisory table";

Given(
  "User visits Vulnerability details Page of {string}",
  async ({ page }, vulnerabilityID) => {
    await page.goto("/");
    await page.getByRole("link", { name: "Vulnerabilities" }).click();

    await page.getByPlaceholder("Search").click();
    await page.getByPlaceholder("Search").fill(vulnerabilityID);
    await page.getByPlaceholder("Search").press("Enter");

    await page.getByRole("link", { name: vulnerabilityID }).click();
  }
);

// SBOMS

Then("The SBOMs table is sorted by {string}", async ({ page }, columnName) => {
  const toolbarTable = new ToolbarTable(page, SBOM_TABLE_NAME);
  toolbarTable.verifyTableIsSortedBy(columnName);
});

Then(
  "The SBOMs table total results is {int}",
  async ({ page }, totalResults) => {
    const toolbarTable = new ToolbarTable(page, SBOM_TABLE_NAME);
    await toolbarTable.verifyPaginationHasTotalResults(totalResults);
  }
);

Then(
  "The SBOMs table total results is greather than {int}",
  async ({ page }, totalResults) => {
    const toolbarTable = new ToolbarTable(page, SBOM_TABLE_NAME);
    await toolbarTable.verifyPaginationHasTotalResultsGreatherThan(
      totalResults
    );
  }
);

Then(
  "The {string} column of the SBOM table contains {string}",
  async ({ page }, columnName, expectedValue) => {
    const toolbarTable = new ToolbarTable(page, SBOM_TABLE_NAME);
    await toolbarTable.verifyColumnContainsText(columnName, expectedValue);
  }
);

// Advisories

Then("User selects the Tabs {string}", async ({ page }, tabName) => {
  await page.getByText(tabName).click();
});

Then(
  "The Advisory table is sorted by {string}",
  async ({ page }, columnName) => {
    const toolbarTable = new ToolbarTable(page, ADVISORY_TABLE_NAME);
    toolbarTable.verifyTableIsSortedBy(columnName);
  }
);

Then(
  "The Advisory table total results is {int}",
  async ({ page }, totalResults) => {
    const toolbarTable = new ToolbarTable(page, ADVISORY_TABLE_NAME);
    await toolbarTable.verifyPaginationHasTotalResults(totalResults);
  }
);

Then(
  "The Advisory table total results is greather than {int}",
  async ({ page }, totalResults) => {
    const toolbarTable = new ToolbarTable(page, ADVISORY_TABLE_NAME);
    await toolbarTable.verifyPaginationHasTotalResultsGreatherThan(
      totalResults
    );
  }
);

Then(
  "The {string} column of the Advisory table contains {string}",
  async ({ page }, columnName, expectedValue) => {
    const toolbarTable = new ToolbarTable(page, ADVISORY_TABLE_NAME);
    await toolbarTable.verifyColumnContainsText(columnName, expectedValue);
  }
);
